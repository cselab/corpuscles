load("co/tri.mac") $
load("co/vec.mac") $
load("co/ten.mac") $
load("co/dtri.mac") $

grad(f, v):=ten_block([diff(f, v[X]), diff(f, v[Y]), diff(f, v[Z])]);

vec_ini(a) $
vec_ini(b) $
depends(a, [x, y, z])$
depends(b, [x, y, z])$

Da: jacobian(a, [x, y, z])$
Db: jacobian(b, [x, y, z])$

A: b.Da  + a.Db$

ab: a . b;
B: grad(ab, [x, y, z]);

expand(A[1,1] - B[1]);
expand(A[1,2] - B[2]);
expand(A[1,3] - B[3]);
