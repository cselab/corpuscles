load("stringproc")$

load("co/off.mac")$
load("co/util.mac")$
load("co/he.mac")$
load("co/util.mac")$
load("co/loop.mac")$
load("co/vec.mac")$
load("co/tri.mac")$
load("co/edg.mac")$
load("co/punto.mac")$

if not stringp(file) then file: "~/hex.off";
print(file);
he: he(file) $

nh: he_nh(he) $
nv: he_nv(he) $

alloc(nh,   tb, tc, eb, ec, sb, sc, u, aa, ab, ac) $
alloc(nv, r);
calloc(nv, area, K);
valloc(nv, lp, m, n);

loop_he(he,
  tb[h]: tri_cot(a, b, c),
  tc[h]: tri_cot(b, c, a),

  sb[h]: edg_sq(a, b),
  sc[h]: edg_sq(a, c)
);

loop_he(he,
  area[i] += tb[h]*sc[h] + tc[h]*sb[h]);

loop_tri(he,
  K[i] += tri_angle(c, a, b),
  K[j] += tri_angle(a, b, c),
  K[k] += tri_angle(b, c, a));
loop_ver(he,
  block([numer: true],
    K[i] : 2*%pi - K[i]));

loop_ver(he,
  r[i]: vec_cylindrical_r(a));

print(K[0]/area[0]);
with_stdout("q",
  printf(true, "x y z r area K~%"),
  punto_write(he, r, area, K));

