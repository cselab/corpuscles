load("vect")$
load("stringproc")$

load("he/off.mac")$
load("he/util.mac")$
load("he/he.mac")$
load("he/util.mac")$
load("he/loop.mac")$
load("he/vec.mac")$
load("he/tri.mac")$
load("he/edg.mac")$
load("he/punto.mac")$

file: "~/he/data/rbc/laplace/1.off"$
he: he(file) $

nh: he_nh(he) $
nv: he_nv(he) $

alloc(nh,   tb, tc, eb, ec, sb, sc, u, ang) $
alloc(nv, H);
calloc(nv, area);
valloc(nv, lp, m, n);

loop_he(he,
  tb[h]: tri_cot(a, b, c),
  tc[h]: tri_cot(b, c, a),

  eb[h]: a - b,
  ec[h]: a - c,

  sb[h]: edg_sq(a, b),
  sc[h]: edg_sq(a, c),

  u[h]:   tri_normal(a, b, c),
  ang[h]: tri_angle(a, b, c));

loop_he(he,
  m[i]    += ang[h]*u[h],
  lp[i]   += tb[h]*ec[h] + tc[h]*eb[h],
  area[i] += tb[h]*sc[h] + tc[h]*sb[h]);

loop_ver(he,
  n[i]: vec_norm(m[i]));

loop_ver(he,
  H[i]: vec_dot(lp[i], n[i])/area[i]);

with_stdout("q",
  printf(true, "x y z H~%"),
  punto_write(he, H));