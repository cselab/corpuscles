load("stringproc")$

load("he/off.mac")$
load("he/util.mac")$
load("he/he.mac")$
load("he/util.mac")$
load("he/loop.mac")$
load("he/vec.mac")$
load("he/tri.mac")$
load("he/ten.mac")$
load("he/dtri.mac")$
load("he/edg.mac")$
load("he/punto.mac")$
load("he/dvec.mac")$

dy(a, b):=ten_dyadic(a, b);
vt(a, b):=vec_ten(a, b);
tv(a, b):=ten_vec(a, b);
tt(a, b):=ten_ten(a, b);
vv(a, b):=vec_dot(a, b);

/* file: "~/q.off"$ */

file: "~/he/data/rbc/laplace/0.off";
he: he(file) $

nh: he_nh(he) $
nv: he_nv(he) $

alloc(nh,   tb, tc, eb, ec, sb, sc, u, ang) $
alloc(nv, H, ff, r);
calloc(nv, area);
valloc(nv, lp, m, n);
valloc(nv, f);
talloc(nv, dn)$

loop_he(he,
  tb[h]: tri_cot(a, b, c),
  tc[h]: tri_cot(b, c, a),

  eb[h]: a - b,
  ec[h]: a - c,

  sb[h]: edg_sq(a, b),
  sc[h]: edg_sq(a, c),

  u[h]:   tri_normal(a, b, c),
  ang[h]: tri_angle(c, a, b));

loop_he(he,
  m[i]    += ang[h]*u[h],
  lp[i]   += tb[h]*ec[h] + tc[h]*eb[h],
  area[i] += tb[h]*sc[h] + tc[h]*sb[h]);

loop_ver(he,
  n[i]: vec_norm(m[i]));

loop_ver(he, dn[i]: dvec_norm(m[i]));

loop_ver(he,
  H[i]: vec_dot(lp[i], n[i]),
  r[i]: vec_cylindrical_r(a));

loop_he(he,
  [Da, Db, Dc]: dtri_normal(a, b, c),
  F: dn[i],
  f[i] += ang[h]*vt(lp[i], tt(F, Da)),
  f[j] += ang[h]*vt(lp[i], tt(F, Db)),
  f[k] += ang[h]*vt(lp[i], tt(F, Dc)));
loop_he(he,
  [dc, da, db]: dtri_angle(c, a, b),
  F: dn[i],
  f[i] += vt(lp[i], tt(F, dy(u[h], da))),
  f[j] += vt(lp[i], tt(F, dy(u[h], db))),
  f[k] += vt(lp[i], tt(F, dy(u[h], dc))));
loop_he(he,
  [da, db, dc]: dtri_cot(a, b, c),
  f[i] += vt(n[i], dy(ec[h], da)),
  f[j] += vt(n[i], dy(ec[h], db)),
  f[k] += vt(n[i], dy(ec[h], dc)));
loop_he(he,
  [db, dc, da]: dtri_cot(b, c, a),
  f[i] += vt(n[i], dy(eb[h], da)),
  f[j] += vt(n[i], dy(eb[h], db)),
  f[k] += vt(n[i], dy(eb[h], dc)));
loop_he(he,
  f[i] += tc[h]*n[i],
  f[j] -= tc[h]*n[i]);
loop_he(he,
  f[i] += tb[h]*n[i],
  f[k] -= tb[h]*n[i]);

loop_ver(he,
  ff[i]: vec_abs(f[i]));
with_stdout("q",
  printf(true, "x y z r area H fx fy fz ff~%"),
  punto_write(he, r, area, H, f, ff));

print(ff[0]/area[0]);
