load("stringproc")$
load("lapack") $

load("co/off.mac")$
load("co/util.mac")$
load("co/he.mac")$
load("co/edg.mac")$
load("co/vec.mac")$
load("co/tri.mac")$
load("co/util.mac")$
load("co/loop.mac")$

array2matrix(A):= block([n, m], local(A),
  [n, m]: arrayinfo(A)[3],
  genmatrix(lambda([i, j], A[i - 1, j - 1]), n + 1, m + 1)) $

array2vector(A):= block([n], local(A),
  [n]: arrayinfo(A)[3],
  makelist(A[i - 1], i, n + 1));

pinv(B):=block([sigma, U, VT, m, n, Sigma, SigmaR, SigmaT, V, UT],
[sigma, U, VT]: dgesvd(B, true, true),
m: length(U),
n: length(VT),
SigmaR: genmatrix(lambda([i, j], if i = j then 1/sigma[i] else 0), m, n),
SigmaT: transpose(SigmaR),
V: transpose(VT),
UT: transpose(U),
V . SigmaR . UT) $

he: he("data/12.off") $

i: 0;
n: loop_ring(he, i, s) + 1;

alloc(n, be, th);
alloc2(n + 1, 6, A);
alloc(n + 1, xx, yy, zz);

(Al: 0,
  loop_ring(he, i, Al += be[s]: tri_angle(c, a, b)));

for i: 0 thru n - 1 do be[i]: float(2*%pi*be[i]/Al);

th[0]: 0;
for i: 1 thru n - 1 do th[i]: th[i - 1] + be[i];

A[0, 0]: 1;
A[0, 1]: A[0, 2]: A[0, 3]: A[0, 4]: A[0, 5]: 0;
loop_ring(he, i,
  block([th: th[s], q, p: 0, X: 1, Y: 2, Z: 3],
    q: edg_abs(a, b),
    xx[0]: a[X], yy[0]: a[Y], zz[0]: a[Z],
    xx[s + 1]: b[X], yy[s + 1]: b[Y], zz[s + 1]: b[Z],
    u: q*cos(th),
    v: q*sin(th),
    A[s + 1, p++]: 1, A[s + 1, p++]: u, A[s + 1, p++]: v,
    A[s + 1, p++]: 1/2*u^2, A[s + 1, p++]: u*v, A[s + 1, p++]: 1/2*v^2)) $

A: array2matrix(A) $
xx: array2vector(xx) $
yy: array2vector(yy) $
zz: array2vector(zz) $
rr: matrix(xx, yy, zz) $

B: transpose(A) . A $
C: pinv(B) . transpose(A) $

C;

C1: C[2] $
C2: C[3] $
C11: C[4] $
C12: C[5] $
C22: C[6] $

xu: rr . transpose(C1);
xv: rr . transpose(C2);
xu: map('first, args(xu));
xv: map('first, args(xv));

xuu: rr . transpose(C11);
xuv: rr . transpose(C12);
xvv: rr . transpose(C22);

u: vec_cross(xu, xv);
n: vec_norm(u);

g11: xu.xu;
g12: g21: xu.xv;
g22: xv.xv;
g: determinant(matrix([g11, g12], [g21, g22]));

g111: xu . xuu;
g112: xu . xuv;
g122: xu . xvv;
g212: xv . xuv;
g211: xv . xuu;
g222: xv . xvv;

block([gu, gv, df],
gu: 1/g*(g22*xu - g12*xv),
gv: 1/g*(g11*xv - g12*xu),
df: [0, 0, 0],
loop_ring(he, i, block([X, Y, Z, f, w],
  X: 1, Y: 2, Z: 3,
  f: b[Y],
  w: gu*C1[s + 1] + gv*C2[s + 1],
  df += w*f)));

block([gu, gv, guu, guv, gvv, H],
  gu: -(g11*(g22*g122 - g12*g222) + 2*g12*(g12*g212 - g22*g112) + g22*(g22*g111 - g12*g211))/g^2,
  gv: -(g11*(g11*g222 - g12*g122) + 2*g12*(g12*g112 - g11*g212) + g22*(g11*g211 - g12*g111))/g^2,
  guu: g22/g,
  guv: -2*g12/g,
  gvv: g11/g,
  H: 0,
  loop_ring(he, i, block([w],
      w: gu*C1[s + 1] + gv*C2[s + 1] + guu*C11[s + 1] + guv*C12[s + 1] +  gvv*C22[s + 1],
      H += 1/2*w*vec_dot(n, b))));
