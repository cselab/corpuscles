/* nv, nt, ne, nh
   nxt, flp
   ver, tri, edg
   hdg_ver, hdg_edg, hdg_tri
   */

load("stringproc") $
load("he/off.mac") $

alloc(n, a)::=buildq([n, a], a: make_array('any, n))$
for_tt([L])::=buildq([L, t: gensym()],
  for t in listarray(tt) do
  block([i: t[1], j: t[2], k:  t[3] ],
    splice(L)));

postfix("++");
"++"(i)::=buildq([i, o: gensym()], (o: i, i: i + 1, o));

file: "~/he/data/hex/flat.off";
file: "~/0.off"$
[x, y, z, tt]: off_read(file) $

nv: off_n(x) $
nt: off_n(tt) $
nh: 3*nt $

alloc(nv, hdg_ver)$
alloc(nt, hdg_tri)$
alloc(nh, nxt)$ alloc(nh, flp)$
alloc(nh, ver)$ alloc(nh, tri)$ alloc(nh, edg)$

kill(hdg);
setup_hdg(h, t, i, j):=(
  hdg[i, j]: h,
  hdg_tri[t]:  hdg_ver[i]:  h,
  ver[h]: i, tri[h]: t) $

t: h: 0 $
for_tt(
  setup_hdg(hi : h++, t, i, j),
  setup_hdg(hj : h++, t, j, k),
  setup_hdg(hk : h++, t, k, i),
  nxt[hi]: hj, nxt[hj]: hk, nxt[hk]: hi,
  t++
) $

setup_flip(i, j):=block([h, f],
  h: hdg[i, j],
  f: hdg[j, i],
  if not subvarp(f) then flp[h]: f else flp[h]: -1);

for_tt(
  setup_flip(i, j),
  setup_flip(j, k),
  setup_flip(k, i))$

setup_edg(i, j):=block([h, f],
  h: hdg[i, j],
  f: hdg[j, i],
  if not subvarp(h) then (
    edg[h]: e,
    if not subvarp(f) then edg[f]: e,
    kill(hdg[i, j]), kill(hdg[j, i]),
    e++));

e: 0;
for_tt(
  setup_edg(i, j),
  setup_edg(j, k),
  setup_edg(k, i));

ne: e;
alloc(ne, hdg_edg) $

for h : 0 thru nh - 1 do block([e: edg[h]], hdg_edg[e]: h);
