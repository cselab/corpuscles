loop_0(he, [L])::='done;

loop_tri(he, [L])::=buildq([x: gensym(), y: gensym(), z: gensym(), nt: gensym(), L],
  block([nt, x, y, z],
    nt: he_nt(he),
    x: he_x(he), y: he_y(he), z: he_z(he),
    for t: 0 thru nt - 1 do
    block([h, i, j, k, a, b, c],
      h: he_hdg_tri(he, t),
      i: he_ver(he, h),
      j: he_ver(he, he_nxt(he, h)),
      k: he_ver(he, he_nxt(he, he_nxt(he, h))),
      a: [x[i], y[i], z[i]],
      b: [x[j], y[j], z[j]],
      c: [x[k], y[k], z[k]],
      block(splice(L)))));

loop_dih(he, [L])::=buildq(
  [x: gensym(), y: gensym(), z: gensym(),
    ne: gensym(), n: gensym(), nn: gensym(), nnf: gensym(),
    L],
  block([ne, x, y, z],
    ne: he_ne(he),
    x: he_x(he), y: he_y(he), z: he_z(he),
    for e: 0 thru ne - 1 do
    block([h, n, nn, nnf, i, j, k, l, a, b, c, d],
      h: he_hdg_edg(he, e),
      if not he_bnd(he, h) then (
        n: he_nxt(he, h),
        nn: he_nxt(he, n),
        nnf: he_nxt(he, he_nxt(he, he_flp(he, h))),
        i: he_ver(he, nn),
        j: he_ver(he, h),
        k: he_ver(he, n),
        l: he_ver(he, nnf),
        a: [x[i], y[i], z[i]],
        b: [x[j], y[j], z[j]],
        c: [x[k], y[k], z[k]],
        d: [x[l], y[l], z[l]],
        block(splice(L))))));

loop_he(he, [L])::=buildq([x: gensym(), y: gensym(), z: gensym(), nh: gensym(), n: gensym(), nn: gensym(), L],
  block([nh, x, y, z],
    nh: he_nh(he),
    x: he_x(he), y: he_y(he), z: he_z(he),
    for h: 0 thru nh - 1 do
    block([n, nn, i, j, k, a, b, c],
      n: he_nxt(he, h),
      nn: he_nxt(he, n),
      i: he_ver(he, h),
      j: he_ver(he, n),
      k: he_ver(he, nn),
      a: [x[i], y[i], z[i]],
      b: [x[j], y[j], z[j]],
      c: [x[k], y[k], z[k]],
      block(splice(L)))));

/* TODO */
loop_he0(he, [L])::=buildq([x: gensym(), y: gensym(), z: gensym(), nh: gensym(), n: gensym(), nn: gensym(), L],
  block([nh, x, y, z],
    nh: he_nh(he),
    x: he_x(he), y: he_y(he), z: he_z(he),
    for h: 0 thru nh - 1 do
    block([n, nn, i, j, k, a, b, c],
      n: he_nxt(he, h),
      nn: he_nxt(he, n),
      i: he_ver(he, h),
      if (i # 0) then return(),
      j: he_ver(he, n),
      k: he_ver(he, nn),
      a: [x[i], y[i], z[i]],
      b: [x[j], y[j], z[j]],
      c: [x[k], y[k], z[k]],
      block(splice(L)))));

loop_ver(he, [L])::=buildq([x: gensym(), y: gensym(), z: gensym(), nv: gensym(), L],
  block([nv, x, y, z],
    nv: he_nv(he),
    x: he_x(he), y: he_y(he), z: he_z(he),
    for i: 0 thru nv - 1 do
    block([h, a],
      h: he_hdg_ver(he, i),
      a: [x[i], y[i], z[i]],
      block(splice(L)))));

loop_ring(he, i0, [L])::=buildq([L, i0, h: gensym(), h0: gensym(), n: gensym(), f: gensym()],
  block([h, h0, n, f, i, j],
    i: i0,
    h: he_hdg_ver(he, i),
    h0: h: he_nxt(he, h),
    while true do (
      j: he_ver(he, h),
      block(splice(L)),
      n: he_nxt(he, h),
      f: he_flp(he, n),
      h: he_nxt(he, f),
      if h = h0 then return('done))));

loop_ring_tri(he, i0, [L])::=buildq([L, i0, h: gensym(), h0: gensym(), n: gensym(), f: gensym()],
  block([h, h0, n, f, i, j, k],
    i: i0,
    h: he_hdg_ver(he, i),
    h0: h: he_nxt(he, h),
    while true do (
      j: he_ver(he, h),
      n: he_nxt(he, h),
      k: he_ver(he, n),
      block(splice(L)),
      n: he_nxt(he, h),
      f: he_flp(he, n),
      h: he_nxt(he, f),
      if h = h0 then return('done))));
