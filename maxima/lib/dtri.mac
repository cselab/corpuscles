dtri_normal(a, b, c):=block([A, n, da, db, dc],
  n: tri_normal(a, b, c),
  A: tri_area(a, b, c),
  da: 1/(2*A) * ten_dyadic(vec_cross(c - b, n), n),
  db: 1/(2*A) * ten_dyadic(vec_cross(a - c, n), n),
  dc: 1/(2*A) * ten_dyadic(vec_cross(b - a, n), n),
  [da, db, dc]);

angle0(a, b, n):=block([v, nv, v0],
  v: b - a,
  nv: vec_cross(n, v),
  v0: vec_dot(v, v),
  nv/v0);

dtri_angle(a, b, c):=block([n, da, db, dc],
  n: tri_normal(b, c, a),
  dc: angle0(c, b, n),
  da: angle0(b, a, n),
  db: -(dc + da),
  [da, db, dc]);

dtri_cot(a, b, c):=block([ang, s, da, db, dc],
  ang: tri_angle(a, b, c),
  s: sin(ang),
  s: -1/(s*s),
  [da, db, dc]: dtri_angle(a, b, c),
  [s*da, s*db, s*dc]);

dtri_area(a, b, c):=block([n, ab, bc, ca, da, db, dc],
  n: tri_normal(a, b, c)/2,
  [ab, bc, ca]: tri_edg(a, b, c),
  da: vec_cross(n, bc),
  db: vec_cross(n, ca),
  dc: vec_cross(n, ab),
  [da, db, dc]);

dtri_edg_area(a, b, c):=block([A, s, Aa, Ab, Acb, Ac, sa, sa, da, db, dc],
  A: tri_area(a, b, c),
  s: edg_sq(a, b),

  [Aa, Ab, Ac]: dtri_area(a, b, c),
  [sa, sb]: dedg_sq(a, b),

  da: sa/A-(Aa*s)/A^2,
  db: sb/A-(Ab*s)/A^2,
  dc: -(Ac*s)/A^2,

  [da, db, dc]);
