#!/usr/bin/awk -f

function r(x, y, z) {
    return sqrt(x^2 + y^2 + z^2)
}

function p(x, z,   pi) {
    pi = 3.141592653589793115997964
    return (mu*((-(3*(gx*x \
             *((2*w*(5*(z-2*w)^3+w*(5*(z-2*w)^2-r(x,0,z-2*w)^2)) \
              +r(x,0,z-2*w)^2*(z-2*w)^2) \
              /r(x,0,z-2*w)^7 \
              -z^2/r(x,0,z)^5) \
          -gz*(((z-2*w)*(2*w*(z-w)*(5*(z-2*w)^2-3*r(x,0,z-2*w)^2) \
                        -r(x,0,z-2*w)^2*(z-2*w)^2) \
              +2*w \
                *(r(x,0,z-2*w)^2*((z-2*w)^2-x^2) \
                 +(5*x^2-r(x,0,z-2*w)^2)*(z-2*w)*(z-w))) \
              /r(x,0,z-2*w)^7 \
              +z^3/r(x,0,z)^5+x^2*(z/r(x,0,z)^5-(z-2*w)/r(x,0,z-2*w)^5)) \
          +gx*x \
             *((2*w \
                 *((5*x^2-2*r(x,0,z-2*w)^2)*(z-2*w) \
                  +w*(5*x^2-3*r(x,0,z-2*w)^2))) \
              /r(x,0,z-2*w)^7 \
              +x^2*(1/r(x,0,z-2*w)^5-1/r(x,0,z)^5)))) \
    /4) \
    -(3*w^2*(gz*(z-2*w)-gx*x))/(2*r(x,0,z-2*w)^5))) \
 /(3*pi);
}

BEGIN {
    me = "pressure.awk"
    w = -2
    mu = 1
    gx = 0
    gy = 0
    gz = 10

    nx = 100
    ny = 100

    xl = -2
    xh = 2

    yl = -2
    yh = 2

    n = (nx + 1)*(ny + 1)

    dx = (xh - xl) / nx
    dy = (yh - yl) / ny

    l = 0
    for (j = 0; j < ny + 1; j++)
	for (i = 0; i < nx + 1; i++) {
	  x = xl + dx * i
          y = yl + dy * j
          d = distance[l] = r(x, y, 0)
          if (d > eps)
              pressure[l] = p(x, y)
          else
              pressure[l] = 0
          l++
	}

    nz = 0
    zl = 0
    dz = 0
    printf "# vtk DataFile Version 2.0\n" \
            "generated by %s\n" \
            "ASCII\n" \
            "DATASET STRUCTURED_POINTS\n" \
            "DIMENSIONS %d %d %d\n" \
            "ORIGIN %.16g %.16g %.16g\n" \
            "SPACING %.16g %.16g %.16g\n",
            me, nx + 1, ny + 1, nz + 1, xl, yl, zl, dx, dy, dz
    printf "POINT_DATA %d\n", n
    scalar("distance", distance)
    scalar("pressure", pressure)
}

function scalar(name, s,    i)
{
    printf "SCALARS %s double\n", name
    printf "LOOKUP_TABLE DEFAULT\n"
    for (i = 0; i < n; i++)
      printf "%.16g\n", s[i]


}
