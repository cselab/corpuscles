#!/usr/bin/awk -f

function r(x, y, z) {
    return sqrt(x^2 + y^2 + z^2)
}

function p(x, z,   pi) {
    pi = 3.141592653589793115997964
    return (mu*(z*(z^2*(gz*(5*w*r(x,0,z)^5*z+3*r(x,0,z-2*w)^7) \
            -r(x,0,z)^5*(3*gz*r(x,0,z-2*w)^2+5*w*(gx*x+7*gz*w))) \
       +3*(gz*(30*w^3*r(x,0,z)^5*z+x^2*r(x,0,z-2*w)^7) \
          -gx*x*r(x,0,z)^5*r(x,0,z-2*w)^2*z) \
       +r(x,0,z)^5*(5*w*(5*gz*r(x,0,z-2*w)^2+x*(gz*x+5*gx*w))*z \
                   -(w*((gx*x+69*gz*w)*r(x,0,z-2*w)^2 \
                       +5*(gx*x^3+w*(3*gz*x^2+4*w*(2*gx*x+5*gz*w)))) \
                    +3*gz*x^2*r(x,0,z-2*w)^2))+3*gx*x*r(x,0,z-2*w)^7*z) \
    +3*gx*x^3*r(x,0,z-2*w)^7 \
    +r(x,0,z)^5*(w^2*((19*gx*x+62*gz*w)*r(x,0,z-2*w)^2 \
                     +5*(gx*x^3+2*w*(gz*x^2+2*w*(gx*x+2*gz*w)))) \
                -3*gx*x^3*r(x,0,z-2*w)^2))) \
 /(12*pi*r(x,0,z)^5*r(x,0,z-2*w)^7)
}

BEGIN {
    me = "pressure.awk"
    w = -2
    mu = 1
    gx = 0
    gy = 0
    gz = 10

    nx = 100
    ny = 100

    xl = -2
    xh = 2

    yl = -2
    yh = 2

    n = (nx + 1)*(ny + 1)

    dx = (xh - xl) / nx
    dy = (yh - yl) / ny

    l = 0
    for (j = 0; j < ny + 1; j++)
	for (i = 0; i < nx + 1; i++) {
	  x = xl + dx * i
          y = yl + dy * j
          d = distance[l] = r(x, y, 0)
          if (d > eps)
              pressure[l] = p(x, y)
          else
              pressure[l] = 0
          l++
	}

    nz = 0
    zl = 0
    dz = 0
    printf "# vtk DataFile Version 2.0\n" \
            "generated by %s\n" \
            "ASCII\n" \
            "DATASET STRUCTURED_POINTS\n" \
            "DIMENSIONS %d %d %d\n" \
            "ORIGIN %.16g %.16g %.16g\n" \
            "SPACING %.16g %.16g %.16g\n",
            me, nx + 1, ny + 1, nz + 1, xl, yl, zl, dx, dy, dz
    printf "POINT_DATA %d\n", n
    scalar("distance", distance)
    scalar("pressure", pressure)
}

function scalar(name, s,    i)
{
    printf "SCALARS %s double\n", name
    printf "LOOKUP_TABLE DEFAULT\n"
    for (i = 0; i < n; i++)
      printf "%.16g\n", s[i]


}
