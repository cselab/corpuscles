. he.util

prog=he.geomview
prog0=he.geomview0

usg () {
    cat <<\EOF
$prog [-t x y z] [-r x y z] [-a APPEARANCE] [-o PPM] [OFF]..
he geomview wrapper
-t x y z      translation
-r x y z      rotation in degree
-f zoom       field of view (default is 40)
-o PPM        save PPM file and exit
-O            save all PPM files and exit
-p command    process every off file by running `command' < IN.off > OUT.off
-c command    run command on every file and write output to stderr, %f is replaced by a file name
-i command    run command on every image, %i replaced by input; %o is replaced by output
-a APPEARANCE load appearance information from a file

Keys:
    q: quit
    s: save snap.ppm
    S: save every snapshot
    p: panel
    j/k: switch between off files
    J: dump file name
    [SPC]: dump orientation and field of view

Environment variables:
WX, WY: resolution of the snapshot

Examples:
$prog -t 0.25 0.25 0     data/rbc.off
$prog -a data/appearance data/rbc.off
$prog -o snap.ppm        data/rbc.off
$prog                    data/rbc.off data/sph.off
$prog -p he.orient       data/rbc.off data/sph.off
$prog -c off.volume      data/rbc.off data/sph.off
EOF
    exit
}

: ${GEOMVIEW=geomview}
: ${WX=800}
: ${WY=600}

num0() { "$AWK" -v n="$1" 'BEGIN  {r = !(n + 0 == n); exit r }'; }
num() { if ! num0 "$1"; then err "not a number '$1'"; fi; }
nonzero () { if test "$1" = 0; then err 'cannot be zero'; fi; }

gview () {
      "$GEOMVIEW" -wpos $WX,$WY -noinit -nopanels -b 1 1 1 -run \
	    "$prog0" \"$tx $ty $tz\"  \"$rx $ry $rz\" $fov \
	    \""$output"\" \""$appearance"\" \""$command"\" \""$icommand"\" \
	    "$@"
}

off0() {
    test -f "$1" &&
	"$AWK" '{ if ("" $0 ~ /OFF/) exit 0; else exit 1 }' "$1"
}
off()   { if ! off0 "$1"; then err "not an off file '$1'"; fi; }
filep() { if test ! -f "$1"; then err "not a file '$1'"; fi; }

if test $# -ne 0 && test "$1" = -h; then usg; fi
if ! e "$GEOMVIEW" --version '2>/dev/null' '1>/dev/null'; then err "$GEOMVIEW is not found"; fi

tx=0 ty=0 tz=0 rx=0 ry=0 rz=0 fov=40 off= output=- appearance=- process=- command=- icommand=-
while test $# -ne 0
do case "$1" in
       -t) shift
	   if test $# -le 2; then err '-t needs three numbers'; fi
	   num "$1"; tx="$1"; shift
	   num "$1"; ty="$1"; shift
	   num "$1"; tz="$1"; shift
	   ;;
       -r) shift
	   if test $# -le 2; then err '-r needs three numbers'; fi
	   num "$1"; rx="$1"; shift
	   num "$1"; ry="$1"; shift
	   num "$1"; rz="$1"; shift
	   ;;
       -f) shift
	   if test $# -eq 0; then err '-f needs a number'; fi
	   num "$1"; nonzero "$1"; fov="$1"; shift
	   ;;
       -a) shift
	   if test $# -eq 0; then err '-o needs a file'; fi
	   filep "$1"; appearance="$1"; shift
	   ;;
       -o) shift
	   if test $# -eq 0; then err '-o needs a file'; fi
	   output="$1"; shift
	   ;;
       -O) shift; output=-O ;;
       -p) shift
	   if test $# -eq 0; then err '-p needs a command'; fi
	   process="$1"; shift
	   ;;
       -c) shift
	   if test $# -eq 0; then err '-c needs a command'; fi
	   command="$1"; shift
	   ;;
       -i) shift
	   if test $# -eq 0; then err '-i needs a command'; fi
	   icommand="$1"; shift
	   ;;
       -*) err "unknown option '$1'" ;;
	*) break
   esac
done

if test $# -eq 0; then err 'no input files'; fi
if test "$process" = -
then for i; do off "$i"; done
fi

if test $process = -
then gview "$@"
else t=/tmp/he.geomview.$$
     mkdir -p $t
     trap 'rm -rf $t' 1 2 3 4 15
     i=0
     for f
     do shift
	i=`expr $i + 1`
	o=`printf %s/%05d $t $i`
	e $process "$f" '>' $o
	if test $? -ne 0; then err "'$process $f' failed"; fi
	set -- "$@" $o
     done
     gview "$@"
     rm -rf $t
fi
