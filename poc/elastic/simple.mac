kill(all) $
load("nchrpl")$
load("scifac")$
load("format")$
load("cgrind")$
load("stringproc") $
load("vect") $

expand(c([dvx, dvy], [ax + vx, ay + vy]) + c([dux, duy], [bx + ux, by + uy]) + c([dwx, dwy], [cx + wx, cy + wy])), so;

declare([ax, ay, bx, by, cx, cy], constant) $

cross(a, b):=express(a ~ b);

ax: ay: 0$
F(a, b):= a^2 + b;

frm0 (e):= format(e, %poly(Fb, Fa), %factor, gcfac) $
frm1 (e):= format(e, %poly(vx, vy, ux, uy, wx, wy), %factor, gcfac) $
co(dE, d):=frm0(factor(coeff(dE, diff(d)))) $
dx(x, y):= p0 + px*x + py*y $
dy(x, y):= q0 + qx*x + qy*y $

e: [
  dx(ax, ay) = vx,
  dy(ax, ay) = vy,

  dx(bx, by) = ux,
  dy(bx, by) = uy,

  dx(cx, cy) = wx,
  dy(cx, cy) = wy
] $

de: diff(e);
v: [p0, px, py,   q0, qx, qy];
ds: linsolve(de, diff(v));
s : linsolve( e,       v);

sx: dx(x, y);
sy: dy(x, y);
Dxx: (diff(sx, x) + diff(sx, x))/2;
Dxy: (diff(sx, y) + diff(sy, x))/2;
Dyx: (diff(sy, x) + diff(sx, y))/2;
Dyy: (diff(sy, y) + diff(sy, y))/2;

D: matrix([Dxx, Dxy], [Dyx, Dyy]) $

I1: mattrace(D);
I2: determinant(D);

E: F(I1, I2);

dE: subst(ds, factor(diff(E))) $
dE: radcan(dE) $
dE: expand(dE) $

dvx: gcfac((co(dE, vx)));
dvy: gcfac((co(dE, vy)));

dux: gcfac((co(dE, ux)));
duy: gcfac((co(dE, uy)));

dwx: gcfac((co(dE, wx)));
dwy: gcfac((co(dE, wy)));

da: [dvx, dvy];
db: [dux, duy];
dc: [dwx, dwy];

a0: [ax, ay];
b0: [bx, by];
c0: [cx, cy];

a: [ax + vx, ay + vy];
b: [bx + ux, by + uy];
c: [cx + wx, cy + wy];

ta: cross(a0, da);
tb: cross(b0, db);
tc: cross(c0, dc);

fullratsimp(ev(da + db + dc, infeval, s));
fullratsimp(ev(ta + tb + tc , infeval, s));
