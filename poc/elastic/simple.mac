kill(all) $
load("vect") $
load("nchrpl")$
load("scifac")$
load("format")$
load("cgrind")$
load("stringproc") $

frm0 (e):= format(e, %poly(Fb, Fa), %factor, gcfac) $
frm1 (e):= format(e, %poly(vx, vy, ux, uy, wx, wy), %factor, gcfac) $
co(dE, d):=frm0(factor(coeff(dE, diff(d))))         $
cross(a, b):=express(a ~ b) $

declare([ax, ay, bx, by, cx, cy], constant) $

F(a, b):= a^2 + b;

dx(x, y):= p0 + px*x + py*y ;
dy(x, y):= q0 + qx*x + qy*y ;

e: [
  dx(ax, ay) = vx,
  dy(ax, ay) = vy,

  dx(bx, by) = ux,
  dy(bx, by) = uy,

  dx(cx, cy) = wx,
  dy(cx, cy) = wy
] ;

de: diff(e);
v: [p0, px, py,   q0, qx, qy];
ds: linsolve(de, diff(v));
s : linsolve( e,       v) ;
ds: linsolve(de,      diff(v));

Q: ax*(cy-by)-bx*cy+by*cx+ay*(bx-cx);
ds: subst('Q, Q, ds);
s:  subst('Q, Q, s);

Dxx: (diff(dx(x, y), x) + diff(dx(x, y), x))/2;
Dxy: (diff(dx(x, y), y) + diff(dy(x, y), x))/2;
Dyx: (diff(dy(x, y), x) + diff(dx(x, y), y))/2;
Dyy: (diff(dy(x, y), y) + diff(dy(x, y), y))/2;
D: matrix([Dxx, Dxy], [Dyx, Dyy]) $

I1: mattrace(D)    - 2;
I2: determinant(D) - 1;
I2: factor(I2);
E: F(I1, I2);

dE: subst(ds, factor(diff(E))) $
dE: expand(dE) $

dvx: gcfac((co(dE, vx)));
dvy: gcfac((co(dE, vy)));

dux: gcfac((co(dE, ux)));
duy: gcfac((co(dE, uy)));

dwx: gcfac((co(dE, wx)));
dwy: gcfac((co(dE, wy)));

(X: 1, Y: 2);
fa: [dvx, dvy];
fb: [dux, duy];
fc: [dwx, dwy];

a0: [ax, ay];
b0: [bx, by];
c0: [cx, cy];

da: [vx, vy];
db: [ux, uy];
dc: [wx, wy];

a: a0 + da;
b: b0 + db;
c: c0 + dc;

ta: cross(a0, fa) ;
tb: cross(b0, fb) ;
tc: cross(c0, fc) ;

factor(ev(fa + fb + fc, infeval, s));
factor(ev(ta + tb + tc, infeval, s));

