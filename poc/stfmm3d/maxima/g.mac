load("vect") $
assume('R > 0, 'p0 > 0) $
(X: 1, Y: 2, Z: 3) $
s(i, e)::=buildq([e, i], sum(e, i, 1, 3)) $
matchdeclare([i, j], numberp) $
tellsimpafter(kd(i, j), if i = j then 1 else 0)$
cross(a, b):= express(a ~ b) $

/* t in [0, 2*pi], p in [0, pi] */
x: 'R*cos('t)*sin('p) $
y: 'R*sin('t)*sin('p) $
z: 'R*cos('p) $

f: ['fx, 0, 'fz] $
r: [x, y, z]$
n: r / sqrt(r . r)$
r0: r, p = 0, t = 0$
d: r - r0$
rad: sqrt(d . d)$

j: X$
dA: R^2*sin(p)$
e: s(i, dA*f[i]*(kd(i, j)/rad + d[i]*d[j]/rad^3))$
e: ratexpand(taylor(e, p, 0, 2))$
e: trigsimp(e)$
e: integrate(integrate(e, 't, 0, 2*%pi), 'p, 0, p0)$

Area: integrate(integrate(dA, t, 0, 2*%pi), p, 0, p0) $
pexp: solve(A = ratexpand(taylor(Area, p0, 0, 2)), p0)[2]$

trigsimp(ev(e, pexp)), R = 1/h, fz = fz/A, fx = fx/A;