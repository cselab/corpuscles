load("pdiff") $
load ("nchrpl") $

vabs(a):= sqrt(a.a);

assume(sin('u) > 0);

rbc: ['v = 0, 'a  = 0.54353,  'b  = 0.121435,  'c  = -0.561365, 'F = lambda([q], 'a*q + 'b*q^3 + 'c*q^5)]$
sph: ['v = 0, 'F = lambda([q],   q)] $
elp: ['v = 0, 'F = lambda([q], 2*q)] $

var: ['Ka = 1, 'mu = 0, 'a3 = 0, 'a4 = 0, 'b1 = 0, 'b2 = 0] $

x: sin('u)*sin('v);
y: sin('u)*cos('v);
z: F(cos('u));

r: [x, y, z];

pp: diff(r, 'u);
qq: diff(r, 'v);

[p0, q0]: [pp, qq], sph;
[p1, q1]: [pp, qq], elp;

M: matrix(
  [vabs(p1)/vabs(p0), 0],
  [0, vabs(q1)/vabs(q0)]) $

area: vabs(p0) * vabs(q0);

S: transpose(M) . M $
al: determinant(M) - 1 $
be: 1/(2*determinant(M)) * (mattrace(S) - 2*determinant(M));

eng: 'Ka/2*(al^2 + 'a3*al^3 + 'a4*al^4) + 'mu*(be + 'b1*al*be + 'b2*be^2);

eps: 1e-9;
lo:  eps;
hi: %pi/2;
np: 100;

with_stdout("~/out",
  block([u, L],
  printf(true, "~a~%", "x y z eng area"),
  for i: 0 thru np do (
    u: lo + i*(hi - lo)/(np - 1),
    L: ev([x, y, z, eng, area], infeval, numer, elp, var),
    printf(true, "~{~,16g ~}~%", L)))) $
