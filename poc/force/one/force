. he.util

prog=he.force

usg () {
    cat <<!
$prog FILE.tmpl > FILE.c
!
    exit
}

if test $# -ne 0 && test "$1" = -h; then usg; fi

"$AWK" -v prog=$prog '
function ini() {
    name = get_name(ARGV[1])
    Name = capitalize(name)
}
BEGIN {
    ini()
}

pat("alloc") {
    print "preved"
    next
}

{
    gsub("%name%", name)
    gsub("%Name%", Name)
    print
}

function q(s) { return "\"" s "\"" }
function eq(a, b) { return "" a == "" b }
function tprint(s) { print Tab s }
function msg(s)  { printf "%s: %s\n", prog, s | "cat >&2" }
function msg0(s) { printf "%s\n", s | "cat >&2" }
function err(s) { msg(s); gexit(2) }
function emptyp(s) { return s ~ /^[ \t]*$/ }
function capitalize(s,   n, c, r) {
    n = length(s)
    for (i = 1; i <= n; i++) {
	p = ch(i - 1, s)
	c = ch(i, s)
	if (eq(c, "_"))
	    ;
	else if (i == 1 || eq(p, "_"))
	    r = r toupper(c)
	else
	    r = r c
    }
    return r
}
function ch(i, s) { return substr(s, i, 1) }
function get_name(f) {
    sub(/\..*/, "", f)
    return f
}

function pat(p) {
    if (!eq($1, "//%" p)) return 0
    sub(/[ \t]*\/\/%/, "")
    sub(/^[^ \t]*/, "")
    return 1
}

' "$@"
