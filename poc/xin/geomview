. co.util

gusg () {
    cat <<EOF
$prog [-i] [-u]
-i    ignore comments
-u    update images
EOF
    exit
}

prog=poc/xin/geomview
Ignore=0 Update=0
while test $# -ne 0
do case "$1" in
       -i) shift; Ignore=1 ;;
       -u) shift; Update=1 ;;
       -h) usg ;;
       -*) err "unknown option '$1'" ;;
       *) break ;;
   esac
done

tmp=.tmp
mkdir -p $tmp

ref=poc/xin/ref.off
app=poc/xin/app

Cmd="WX=1000 WY=1000 co.geomview -r 0 0 90 -a $app -f 90 -n none -p \"co.align $ref\" -i \"convert -transparent 'rgb(255,255,255)' %i %b.png\" -o %%o %%i"

"$AWK" -v tmp=$tmp -v Ignore=$Ignore -v Update=$Update -v Cmd="$Cmd" '{
    if (!Ignore && $0 ~ /#/) {
	I++
	next
    } else
	sub(/[ \t]*#[ \t]*/, "")

    v = $1
    a = $2

    i = $3
    o = sprintf("%s/%05d.ppm", tmp, I)
    p = sprintf("%s/%05d.png", tmp, I++)

    if (Update) {
	cmd = Cmd
	gsub("%%i", q(i), cmd)
	gsub("%%o", q(o), cmd)
	sys(cmd)
    }
    print v, a, p
}

function q(x) { return "\"" x "\"" }
function sys(x,   r) {
    r = system(x)
    if (r != 0)
	err(sprintf(":faild: %s", x))
}
function msg(s) { printf "%s\n", s | "cat >&2" }
function err(s) { printf msg(s); exit(2) }

' "$@" | poc/xin/arg Arg > arg.m4

co.m4 poc/xin/gnuplot > main.gp
gnuplot main.gp

# rm -r $tmp
# sed 4q poc/xin/list.dat | sh -x poc/xin/geomview
