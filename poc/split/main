#!/bin/sh

awk '
BEGIN {
      x = "x"
      y = "y"
      z = "z"
      A = "A"
      B = "B"
      C = "C"
      D = "D"
      E = "E"
      F = "F"

      h = t = e = 0
      file = "data/tri"
      
      while (getline < file > 0) {
          set_nxt($1, $2, $3)
          set_nxt($2, $3, $1)
          set_nxt($3, $1, $2)
          
          set_flp($1, $2)
          set_flp($2, $3)
          set_flp($3, $1)
          
          set_ver($1, $2)
          set_ver($2, $3)
          set_ver($3, $1)

          set_tri($1, $2, $3)
          set_tri($2, $3, $1)
          set_tri($3, $1, $2)
      }
      close(file)

      for (t in hdg_tri)
          print t, hdg_tri[t] | "sort -g"
}

function set_ver(i, j,  h, v)
{
    h = id_hdg(i, j)
    v = id_ver(i)
    ver[h] = v
    hdg_ver[v] = h
}

function set_nxt(i, j, k,  h, n)
{
    h = id_hdg(i, j)
    n = id_hdg(j, k)
    nxt[h] = n
}

function set_tri(i, j, k,  h, t)
{
    h = id_hdg(i, j)
    t = id_tri(i, j, k)
    tri[h] = t
    hdg_tri[t] = h
}

function set_flp(i, j,   h, f)
{
    h = id_hdg(i, j)
    f = id_hdg(j, i)
    flp[h] = f
    flp[f] = h
}

function reg(i, j)
{
    h = id_hdg(i, j)
    f = id_hdg(j, i)
}

function id_hdg(i, j)
{
    if ((i, j) in HDG)
        return HDG[i, j]
    else
        return HDG[i, j] = new_hdg(i, j)
}

function new_hdg(i, j, h)
{
    h = H++
    return "h" sprintf("%02d", h)
}

function id_ver(i)
{
    if (i in VER)
        return VER[i]
    else
        return VER[i] = new_ver(i)
}

function new_ver(i)
{
    return i
}

function id_tri(i, j, k, t)
{
    if ((i, j, k) in TRI)
        return TRI[i, j, k]
    else
        return TRI[i, j, k] = TRI[k, i, j] = TRI[j, k, i] = new_tri(i, j, k)
}

function new_tri(i, j, k, t)
{
    t = T++
    return "t" ":" i ":" j ":" k ":" sprintf("%02d", t)
}

'
