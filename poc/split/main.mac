load("co/util.mac")$
load("co/off.mac")$
he(tt):=block([e],
  local(setup_hdg, setup_flip, setup_edg, hdg, for_tt),
  for_tt([L])::=buildq(
    [L, t: gensym()],
    for t in tt do
    block([
        i: t[1],
        j: t[2],
        k: t[2]],
      splice(L))),

  nt: length(tt),
  nh: 3*nt,

  setup_hdg(h, t, i, j):=(
    hdg[i, j]: h,
    hdg_tri[t]:  hdg_ver[i]:  h,
    ver[h]: i, tri[h]: t),

  block(
    [t: 0, h: 0, hi, hj, hk],
    for_tt(
      setup_hdg(hi : h++, t, i, j),
      setup_hdg(hj : h++, t, j, k),
      setup_hdg(hk : h++, t, k, i),
      nxt[hi]: hj, nxt[hj]: hk, nxt[hk]: hi,
      t++)),

  setup_flip(i, j):=block([h, f],
    h: hdg[i, j],
    f: hdg[j, i],
    if not subvarp(f) then flp[h]: f else flp[h]: -1),

  for_tt(setup_flip(i, j),
    setup_flip(j, k),
    setup_flip(k, i)),

  setup_edg(i, j):=block([h, f],
    h: hdg[i, j],
    f: hdg[j, i],
    if not subvarp(h) then (
      edg[h]: e,
      if not subvarp(f) then edg[f]: e,
      kill(hdg[i, j]), kill(hdg[j, i]),
      e++)),

  e: 0,
  for_tt(setup_edg(i, j),
    setup_edg(j, k),
    setup_edg(k, i)),

  ne: e,
  for h : 0 thru nh - 1 do
  block([e: edg[h]], if e#false then hdg_edg[e]: h));

he( [['A, 'B, 'C], ['B, 'A, 'D]] );